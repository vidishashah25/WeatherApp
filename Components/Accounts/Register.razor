@page "/register"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using WeatherApp.Models
@inject WeatherApp.Data.AppDbContext Db
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3 class="text-center mb-4">Register</h3>

<div class="container d-flex justify-content-center align-items-center" style="min-height: 80vh;">
    <div class="col-md-6 col-lg-5 shadow-lg p-4 rounded-4 bg-white">
        <EditForm Model="@registerViewModel" OnValidSubmit="@RegisterUser" formname="registerForm">
            <DataAnnotationsValidator />
            <ValidationSummary class="mb-3 text-danger" />

            <div class="mb-3">
                <label class="form-label">Username</label>
                <InputText class="form-control form-control-lg" @bind-Value="registerViewModel.Username" placeholder="Enter username" />
                <ValidationMessage For="@(() => registerViewModel.Username)" class="text-danger small" />
            </div>
            <div class="mb-3">
                <label class="form-label">Password</label>
                <InputText class="form-control form-control-lg" type="password" @bind-Value="registerViewModel.Password" placeholder="Enter password" />
                <ValidationMessage For="@(() => registerViewModel.Password)" class="text-danger small" />
            </div>
            <div class="mb-3">
                <label class="form-label">Role</label>
                <InputSelect class="form-select form-select-lg" @bind-Value="registerViewModel.Role">
                    <option value="">-- Select role --</option>
                    <option value="super">Super</option>
                    <option value="simple">Simple</option>
                </InputSelect>
                <ValidationMessage For="@(() => registerViewModel.Role)" class="text-danger small" />
            </div>
            @if (!string.IsNullOrEmpty(Message))
            {
                <div class="alert alert-danger py-2 mb-3" role="alert">@Message</div>
            }
            <button class="btn btn-primary w-100 py-2" type="submit">Register</button>
            <div class="text-center mt-3">
                <a class="text-decoration-none" href="/login">Back to Login</a>
            </div>
        </EditForm>
    </div>
</div>


@code {
    RegisterViewModel registerViewModel = new();
    string Message = "";

    private async Task RegisterUser()
    {
        if (Db.Users.Any(u => u.Username == registerViewModel.Username))
        {
            Message = "Username already exists.";
            return;
        }

        var user = new User
        {
            Username = registerViewModel.Username,
            PasswordHash = BCrypt.Net.BCrypt.HashPassword(registerViewModel.Password),
            Role = registerViewModel.Role
        };

        Db.Users.Add(user);
        await Db.SaveChangesAsync();
        Navigation.NavigateTo("/login");
    }
    public class RegisterViewModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; } = "";

        [Required(ErrorMessage = "Password is required")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters")]
        public string Password { get; set; } = "";

        [Required(ErrorMessage = "Role is required")]
        public string Role { get; set; } = "";
    }
}